version: 2
jobs:
  build:
    branches:
      ignore:
        - gh-pages
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      TERM: dumb
      CC_TEST_REPORTER_ID: 2160efccf23099809e4d77b1bbce2330595354d2b5054288c1f185358fa81547
      JAVA_TOOL_OPTIONS: -Xmx2048m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
      GRADLE_MAX_TEST_FORKS: 2

    steps:
      - checkout

      - restore_cache:
          name: Restoring cached gradle dependencies
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run:
          name: Downloading dependencies
          command: ./gradlew dependencies checkLicenses

      - run:
          name: Compiling
          command: ./gradlew assemble

      - store_artifacts:
          name: Uploading artifacts
          path: build/libs
          destination: libs
          when: always

      - store_artifacts:
          name: Uploading sources
          path: build/src
          destination: src
          when: always

      - store_artifacts:
          name: Uploading javadoc
          path: build/docs
          destination: docs
          when: always

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://consensys.bintray.com/binaries/test-reporter-0.6.0-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      - run:
          name: Running unit tests
          command: ./gradlew --stacktrace test

      - run:
          name: Collecting test results
          command: |
            export JACOCO_SOURCE_PATH=$(ls -d */ | awk '{print $1"src/main/java"}' | xargs echo)
            ./cc-test-reporter before-build
            ./gradlew jacocoTestReport jacocoRootTestReport
            ./cc-test-reporter format-coverage -t jacoco build/reports/jacoco/jacocoRootTestReport/jacocoRootTestReport.xml
            ./cc-test-reporter upload-coverage
            mkdir -p ~/test-results/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/ \;
          when: always

      - store_test_results:
          name: Uploading test results
          path: ~/test-results
          destination: tests
          when: always

      - run:
          name: Collecting reports
          command: |
            mkdir -p ~/reports/license
            (cd ./build/reports/license && tar c .) | (cd ~/reports/license && tar x)
            find . -type d -regex ".*/build/reports/tests/test" | while read dir; do
                  module=`echo $dir | sed -e 's/build\/reports\/tests\/test//'`
                  mkdir -p ~/reports/test/"$module"
                  (cd "$dir" && tar c .) | (cd ~/reports/test/"$module" && tar x)
              done
              find . -type d -regex ".*/build/reports/jacoco/test/html" | while read dir; do
                  module=`echo $dir | sed -e 's/build\/reports\/jacoco\/test\/html//'`
                  mkdir -p ~/reports/jacoco/"$module"
                  (cd "$dir" && tar c .) | (cd ~/reports/jacoco/"$module" && tar x)
              done
          when: always

      - store_artifacts:
          name: Uploading reports
          path: ~/reports
          destination: reports

      - run:
          name: Building JavaDoc
          command: ./gradlew javadoc

      - store_artifacts:
          name: Uploading JavaDoc
          path: build/docs/javadoc
          destination: javadoc

      - deploy:
          name: Deploying snapshot to Bintray (release branches only)
          command: |
            if [ -z "${CIRCLE_PULL_REQUEST}" ] && echo "${CIRCLE_BRANCH}" | grep -q -E '^master$|^[0-9]+\.[0-9]+$'; then
              echo "Start deployment"
              BINTRAY_DEPLOY=true ./gradlew deploy
            else
              echo "Skip deployment for branch ${CIRCLE_BRANCH}"
            fi

      - save_cache:
          name: Caching gradle dependencies
          paths:
          - .gradle
          - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}-{{ .Branch }}-{{ .BuildNum }}
